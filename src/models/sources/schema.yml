# Using sources: https://docs.getdbt.com/docs/building-a-dbt-project/using-sources

version: 2

sources: # This keyword specifies that we are talking about sources!
  - name: source
    description: > 
      These are manually created demo tables used by our dbt flow, for proof of concept.
      The purpose of sources in dbt indicates existing (as in - not created by dbt) tables usable by dbt.
      These are usually loaded into the warehouse using an EL tool, like Stich or Fivetran.
    database: Source
    schema: dbo
    freshness: # default freshness
      warn_after: {count: 12, period: hour}
      error_after: {count: 24, period: hour}
    loaded_at_field: Loaded_At

    tables:
      - name: retail_crm_stores
        description: >
          Contains stores information. Is manually created and updated in this demo.
        tests:
        - dbt_expectations.expect_table_row_count_to_be_between:
            min_value: 1
            max_value: 40
        columns:
          - name: store_id
            description: Primary key for table
            tests:
              - unique
              - not_null
          # - name: store_address # We do NOT need to specify ALL column names, only those we want to comment, test or otherwise describe

      - name: retail_crm_products
        description: >
          Contains products information. Is manually created and updated in this demo.
        tests:
        - dbt_expectations.expect_table_row_count_to_be_between:
            min_value: 1
            max_value: 40
        columns:
          - name: product_id
            description: Primary key for table
            tests:
              - unique
              - not_null
      
      - name: retail_crm_orders
        description: >
          Contains orders information. Is manually created and updated in this demo.
        tests:
        - dbt_expectations.expect_table_row_count_to_be_between:
            min_value: 1
            max_value: 40
        columns:
          - name: orders_id
            description: Primary key for table
            tests:
              - unique
              - not_null
      
      - name: retail_crm_orders_lines
        description: >
          Contains order-line information. Is manually created and updated in this demo.
        tests:
        - dbt_expectations.expect_table_row_count_to_be_between:
            min_value: 1
            max_value: 40
        columns:
          - name: orders_line_id
            description: Primary key for table
            tests:
              - unique
              - not_null
      
      - name: retail_crm_employees
        description: >
          Contains employees information. Is manually created and updated in this demo.
        tests:
        - dbt_expectations.expect_table_row_count_to_be_between:
            min_value: 1
            max_value: 40
        columns:
          - name: employees_id
            description: Primary key for table
            tests:
              - unique
              - not_null
      
      - name: retail_crm_customers
        description: >
          Contains customers information. Is manually created and updated in this demo.
        tests:
        - dbt_expectations.expect_table_row_count_to_be_between:
            min_value: 1
            max_value: 40
        columns:
          - name: cust_id
            description: Primary key for table
            tests:
              - unique
              - not_null
      
      - name: retail_crm_customers_address
        description: >
          Contains customer address information. Is manually created and updated in this demo.
        tests:
        - dbt_expectations.expect_table_row_count_to_be_between:
            min_value: 1
            max_value: 40
        columns:
          - name: address_id
            description: Primary key for table
            tests:
              - unique
              - not_null
      
      